# Generated by Django 3.2 on 2021-04-16 17:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Indicates the date on which the model was created', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Indicates the date it was last updated', null=True)),
                ('hash', models.CharField(default='', editable=False, help_text='Unique identifier to identify the state of the model', max_length=32, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'db_table': '_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Indicates the date on which the model was created', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Indicates the date it was last updated', null=True)),
                ('hash', models.CharField(default='', editable=False, help_text='Unique identifier to identify the state of the model', max_length=32, null=True)),
                ('url', models.URLField(help_text='File reference link (eg. http://localhost:8000/image.png)', max_length=1024)),
                ('size', models.IntegerField(help_text='File size in bytes')),
                ('name', models.CharField(help_text='Common File Name (eg. Image.png)', max_length=1024)),
            ],
            options={
                'db_table': 'file',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Indicates the date on which the model was created', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Indicates the date it was last updated', null=True)),
                ('hash', models.CharField(default='', editable=False, help_text='Unique identifier to identify the state of the model', max_length=32, null=True)),
                ('content', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_by_posts', to=settings.AUTH_USER_MODEL)),
                ('liked_by', models.ManyToManyField(db_table='_post__liked_by', related_name='liked_by_posts', to=settings.AUTH_USER_MODEL)),
                ('picture', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='post_pictures', to='models.file')),
            ],
            options={
                'db_table': '_post',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Indicates the date on which the model was created', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Indicates the date it was last updated', null=True)),
                ('hash', models.CharField(default='', editable=False, help_text='Unique identifier to identify the state of the model', max_length=32, null=True)),
                ('content', models.CharField(blank=True, max_length=155)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_by_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': '_comment',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='profile_image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_profile_images', to='models.file'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
